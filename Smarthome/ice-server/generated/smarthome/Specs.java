//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.9
//
// <auto-generated>
//
// Generated from file `devices.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package smarthome;

public class Specs implements java.lang.Cloneable,
                              java.io.Serializable
{
    public int id;

    public String producentId;

    public String name;

    public Type type;

    public String producer;

    public boolean isBluetooth;

    public Specs()
    {
        this.producentId = "";
        this.name = "";
        this.type = Type.PORTABLE;
        this.producer = "";
    }

    public Specs(int id, String producentId, String name, Type type, String producer, boolean isBluetooth)
    {
        this.id = id;
        this.producentId = producentId;
        this.name = name;
        this.type = type;
        this.producer = producer;
        this.isBluetooth = isBluetooth;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        Specs r = null;
        if(rhs instanceof Specs)
        {
            r = (Specs)rhs;
        }

        if(r != null)
        {
            if(this.id != r.id)
            {
                return false;
            }
            if(this.producentId != r.producentId)
            {
                if(this.producentId == null || r.producentId == null || !this.producentId.equals(r.producentId))
                {
                    return false;
                }
            }
            if(this.name != r.name)
            {
                if(this.name == null || r.name == null || !this.name.equals(r.name))
                {
                    return false;
                }
            }
            if(this.type != r.type)
            {
                if(this.type == null || r.type == null || !this.type.equals(r.type))
                {
                    return false;
                }
            }
            if(this.producer != r.producer)
            {
                if(this.producer == null || r.producer == null || !this.producer.equals(r.producer))
                {
                    return false;
                }
            }
            if(this.isBluetooth != r.isBluetooth)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::smarthome::Specs");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, id);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, producentId);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, name);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, type);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, producer);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, isBluetooth);
        return h_;
    }

    public Specs clone()
    {
        Specs c = null;
        try
        {
            c = (Specs)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeInt(this.id);
        ostr.writeString(this.producentId);
        ostr.writeString(this.name);
        Type.ice_write(ostr, this.type);
        ostr.writeString(this.producer);
        ostr.writeBool(this.isBluetooth);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.id = istr.readInt();
        this.producentId = istr.readString();
        this.name = istr.readString();
        this.type = Type.ice_read(istr);
        this.producer = istr.readString();
        this.isBluetooth = istr.readBool();
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, Specs v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public Specs ice_read(com.zeroc.Ice.InputStream istr)
    {
        Specs v = new Specs();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<Specs> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, Specs v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<Specs> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(Specs.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final Specs _nullMarshalValue = new Specs();

    /** @hidden */
    public static final long serialVersionUID = 6994078016382337360L;
}
